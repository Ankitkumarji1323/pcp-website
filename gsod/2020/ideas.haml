!!! html
%html
  %head
    = Haml::Engine.new(File.read("assets/haml-includes/head.haml")).render

  %body
    = Haml::Engine.new(File.read("assets/haml-includes/navigation.haml")).render

    %div{:class => 'site-content'}
      %div{:class => 'how-to is-typeset'}

        %div{:class => 'colspan12-12 colspan8-8 colspan6-6 colspan2-2 as-grid with-gutter'}
          %div{:class => 'col__module--img'}
            %a{:name => 'pcp'}
            %h3 Welcome!
            %p
              Thanks for your interest in working on Performance Co-Pilot (PCP)
              in this years Google Season of Docs program.
              PCP is a system-level performance analysis toolkit for complex,
              distributed computer systems.
            %p
              The tools in PCP are fairly well documented, but there is plenty
              of room for improvement!
              Below are a list of project ideas and areas we'd like to see the
              existing documentation improved, and new documentation added.
            %p
              If you find below projects of interest, please contact the group
              of mentors at
              %a{:href => 'mailto:pcp-mentors@groups.io'} pcp-mentors@groups.io
              and CC individual mentors listed with your area(s) of interest.
            %p
              Please provide at that time:
            %ol
              %li
                a brief introduction to yourself, a little about your background
                and any experience you have in technical writing
              %li
                the PCP project area(s) you are interested in working on
            %p
              We'll then chat with you directly about the idea(s) and work with
              you on a project proposal.
              A strong proposal will likely include more than one idea from the
              list that follows, and a strong candidate would be one with an
              interest in learning about performance analysis, monitoring tools,
              and improving documentation!
            %h3 Resources
            %p
              To learn about PCP basics, philosophy and tools, we recommend you:
            %ol
              %li
                Install PCP on your computer - refer to the
                %a{:href => 'https://pcp.io/docs/guide.html'} Quick Reference Guide
                to help you get started.
              %li
                Peruse the introductory chapters of the
                %a{:href => 'https://pcp.io/docs/books/PCP_UAG/html/'} PCP Users and Administrators Guide
            %br

        %div{:class => 'row-parent'}
          %div{:class => 'row'}
            %section{:class => 'row__colspaced'}
              %div{:class => 'colspan12-8 colspan8-5 colspan6-4 colspan2-2 as-grid with-gutter'}
                %div{:class => 'col__module--img'}
                  %br
                  %h3 Ideas List
                  %ol
                    %li
                      New Content Areas
                      %ul
                        %li
                          %a{:href => '#grafana-pcp'} Grafana PCP tutorial
                        %li
                          %a{:href => '#howtos'} Provide How-To style launching points
                    %li
                      Book Project Areas
                      %ul
                        %li
                          %a{:href => '#readthedocs'} Convert docbook content to readthedocs and reStructuredText format
                      %ul
                        %li
                          %a{:href => '#restapi'} Convert REST API documentation from man page to developer friendly format

                  %br

              %div{:class => 'colspan12-4 colspan8-3 colspan6-2 colspan2-2 as-grid with-gutter'}
                %div{:class => 'col__module--cta'}
                  %h2 Google
                  %h2 Season of Docs
                  %h2 2020
                  %br
                    (
                    %a{:href => 'https://developers.google.com/season-of-docs/'} Home
                    )
                  %br

        %div{:class => 'colspan12-12 colspan8-8 colspan6-6 colspan2-2 as-grid with-gutter'}
          %div{:class => 'col__module--img'}
            %a{:name => 'grafana-pcp'}
            %h3 PCP Grafana documentation
            %p
              The Performance Co-Pilot approach to scalable, multi-host performance
              analysis builds on the
              %a{:href => 'https://redis.io'} Redis
              distributed data store and its native time series support.
              The
              %a{:href => 'https://pcp.io/man/man1/pmseries.1.html'} pmseries
              utility and
              %a{:href => 'https://pcp.io/man/man1/pmproxy.1.html'} pmproxy
              daemon provide the tooling and APIs to support this.
            %p
              The Grafana PCP data source accesses all PCP metric data via
              %a{:href => 'https://pcp.io/man/man1/pmproxy.1.html'} pmproxy
              REST APIs, which are used to access the scalable
              %a{:href => 'https://redis.io/'} Redis
              backend cache.
              Resulting Grafana charts and panels can be exported in JSON format
              with template variables and included as part of Grafana itself, or
              shipped separately as part of PCP and installed/imported using the
              Grafana provisioning mechanisms.
            %p
              %strong Expected results:
              This is a significant opportunity for a technical writer to work with
              PCP developers to document new REST APIs, command line utilities, new
              language specification, and the administrative procedures required to
              setup a cloud based time series analysis system at scale, as these
              features are being put into production environments for the first time.
              The new content will need to link into existing PCP and Grafana docs.
            %p
              %strong Mentors:
              %a{:href => 'mailto:agerstmayr@redhat.com'} Andreas Gerstmayr &lt;agerstmayr@redhat.com&gt;
              ,
              %a{:href => 'mailto:nathans@redhat.com'} Nathan Scott &lt;nathans@redhat.com&gt;
            %br

        %div{:class => 'colspan12-12 colspan8-8 colspan6-6 colspan2-2 as-grid with-gutter'}
          %div{:class => 'col__module--img'}
            %a{:name => 'howtos'}
            %h3 Provide How-To style launching points
            %p
              One area of need in the PCP documentation identified at last years
              %a{:href => 'https://pcp.io/conference/2019/home.html'} conference
              was for us to provide short, hands-on introductory texts and videos
              that guide people toward the in-depth documentation they need.
              The deep documentation exists and is needed, but its buried in alot
              of the detail-oriented, jargon-heavy books.
            %p
              %strong Expected results:
              A series of short, introductory pieces will be created that provide
              simple introductions to complex topics.
              These topics include writing new instrumentation agents, application
              instrumentation in Java, Go, Rust, python and C languages, writing
              analysis tools, and some PCP administration tasks.
              These will each link to the detailed documentation elsewhere - such
              as in the 'Users and Administors Guide', or the 'Programmers Guide'.
            %p
              %strong Mentors:
              %a{:href => 'mailto:chorn@redhat.com'} Christian Horn &lt;chorn@redhat.com&gt;
              ,
              %a{:href => 'mailto:abhide@redhat.com'} Apurva Bhide &lt;abhide@redhat.com&gt;
            %br

        %div{:class => 'colspan12-12 colspan8-8 colspan6-6 colspan2-2 as-grid with-gutter'}
          %div{:class => 'col__module--img'}
            %a{:name => 'readthedocs'}
            %h3 Convert docbook content to readthedocs and reStructuredText format
            %p
              The Performance Co-Pilot documentation currently exists in several forms.
              These are the primary PCP
              %a{:href => 'https://pcp.io/'} website
              ,
              %a{:href => 'https://pcp.io/man/'} man pages
              and the two PCP
              %a{:href => 'https://pcp.io/documentation.html'} books
              (docbook format).
              This project will focus on transfering and updating this
              %a{:href => 'https://en.wikipedia.org/wiki/DocBook'} docbook
              content to
              %a{:href => 'https://en.wikipedia.org/wiki/ReStructuredText'} RST
              such that it can be hosted on the modern, community
              %a{:href => 'https://readthedocs.io/'} readthedocs.io
              site.
              This will allow community contributors to more easily change and
              extend this content.
            %p
              %strong Expected results:
              You will work with the mentors to setup the Performance Co-Pilot
              %a{:href => 'https://readthedocs.io/'} readthedocs.io
              hosting, and by the end of the project we will be able to
              edit and contribute to the books directly through github.
            %p
              %strong Mentors:
              %a{:href => 'mailto:nathans@redhat.com'} Nathan Scott &lt;nathans@redhat.com&gt;
              ,
              %a{:href => 'mailto:abhide@redhat.com'} Apurva Bhide &lt;abhide@redhat.com&gt;
            %br

        %div{:class => 'colspan12-12 colspan8-8 colspan6-6 colspan2-2 as-grid with-gutter'}
          %div{:class => 'col__module--img'}
            %a{:name => 'restapi'}
            %h3 Convert REST API documentation from man page to developer friendly format
            %p
              The Performance Co-Pilot REST API is currently documented in
              %a{:href => 'https://pcp.io/man/man3/pmwebapi.3.html'} man page
              format primarily.
              This is not ideal for web developers, so we'd like to transition
              to separate formatted web pages describing individual requests,
              allowed inputs, sample outputs, etc.
              Likely, this would also be in
              %a{:href => 'https://en.wikipedia.org/wiki/ReStructuredText'} RST
              form such that it can be hosted on the modern, community
              %a{:href => 'https://readthedocs.io/'} readthedocs.io
              site.
              This will allow community contributors to more easily change and
              extend this content.
            %p
              %strong Expected results:
              You will work with the mentors to create modern REST API documentation
              for the Performance Co-Pilot, readily consumable by web developers.
            %p
              %strong Mentors:
              %a{:href => 'mailto:agerstmayr@redhat.com'} Andreas Gerstmayr &lt;agerstmayr@redhat.com&gt;
              ,
              %a{:href => 'mailto:nathans@redhat.com'} Nathan Scott &lt;nathans@redhat.com&gt;
            %br

    = Haml::Engine.new(File.read("assets/haml-includes/footer.haml")).render
