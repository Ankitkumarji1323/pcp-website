Process to make a new PCP release
=================================

Steps to create the packages for a new release
----------------------------------------------
1. Update CHANGELOG with release notes, BZs in fedora.spec
2. Tag release in git (tagged and signed using pcp-masters key)
   Ex: git tag -s -u DEA2C114 -m "X.YY.Z" X.YY.Z
   Update https://github.com/performancecopilot/pcp/releases to
   indicate the new version is now the latest (Edit Release ->
   Update Release in the web UI).
3. Make canonical source tarball right away (./Makepkgs --source)
   and upload it to bintray, using ./scripts/bintray-upload
4. Upload binary pkgs to bintray using the ./scripts/bintray-upload
   and ./scripts/bintray-version scripts from the PCP git repo.
   For the RPM builds where gpg keys supported (modern distros, not
   RHEL5): export RPM_SIGN_KEYID="pcp-masters"
     ./Makepkgs --with-webapps [ --signed ]
   For the DEB builds (export DEB_SIGN_KEYID=0xFE0842EE36DD8C0C
   for official uploads by debian developers)
     ./Makepkgs [ --with-webapps | --signed ]
5. Upload pkgs for Fedora/EPEL (via fedpkg, bodhi)
6. Upload pkgs for Debian unstable (./Makepkgs)

Steps to update the webpage for the new release
-----------------------------------------------
1. From the end of index.haml replace the previous last PCP news
   with a short note about the new release (moved to the front).
   Update the website via "make && make install" (see README).
2. Send an email to pcp-announce@groups.io and pcp@groups.io with
   the details of the new release (include the full changelog).
3. Tweet the release using ./scripts/tweet-new-release.py <filename>
   Put the tweet text in filename and call the above script
   e.g. text "Performance Co-Pilot X.Y.Z released: http://pcp.io"
   (if authentication fails use twitter.com web interface directly)

